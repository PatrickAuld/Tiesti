FORMAT: 1A
HOST: http://localhost/rest/v1/

# Tiesti
API for managing service configurations.

# Group Variables
Variables are referencable properties that can be 
reused between multiple configurations.

## Variables [/vars]

+ Model (application/json)

            [
                {
                    "id" : "123",
                    "label" : "dbPassword",
                    "value" : "password123"
                }
            ]

### List all Variables [GET]
Lists all of the available variables
+ Response 200 
    
    [Variables][]

### Create a new Variable [POST]
Creates a new variable, is the variable model without an ID.
+ Request (application/json)

            {
                "label" : "secretCodeWord",
                "value" : "pickles"
            }

+ Response 201

    [Variable][]

    + Header
    
            Location : $HOST/vars/678
            
## Variable [/vars/{varId}]
Info on a specific varaible.

+ Model (application/json)

            {
                "id" : "123",
                "label" : "dbPassword",
                "value" : "password123"
            }

### Get Variable Info [GET]

+ Response 200

    [Variable][]

### Update a Variable [PUT]

+ Request (application/json)
            
            {
                "label" : "dbPassword",
                "value" : "password123"
            }

+ Response 200

    [Variable][]

# Group Services
Services are entiries than can have configuration's associated with them. They can have independent versions.

## Services [/services]
Services are enties that configs can be associated with.

### List all services [GET]
+ Response 200 (application/json)

    + Body
    
            [
                {
                    "id" : "xyz",
                    "label" : "Secret Service",
                    "description" : "Redacted"
                },
                {
                    "id" : "abc",
                    "label" : "Table Service",
                    "decription" : "Overpriced DIY drinking"
                }
            ]

### Create a new Service [POST]
+ Request (application/json)

            {
                "label" : "Waste Removal Service",
                "decription" : "A stinky job"
            }

+ Response 201

    + Header
    
            location : $HOST/service/678

## Service [/services/{id}]
A single service.

+ Model (application/json)

        {
            "id" : "xyz",
            "label" : "Secret Service",
            "description" : "Redacted",
            "versions" : [ "1" , "2" ]
        }
        
### Get info on a service [GET]

+ Response 200 
    [Service][]

### Update info for a service [PUT]
+ Request (application/json)

        {
            "label" : "Secret Service",
            "description" : "==============",
        }
        
+ Response 200
    [Service][]

## Service Versions [/services/{id}/versions]

+ Model (application/json)

        [
            {
                "id" : "123",
                "label" : "Bush (2 terms)",
                "configurationId" : "1"
            },
            {
                "id" : "234",
                "label" : "Obama (1st term)",
                "configurationId" : "2"
            }
        ]

### List all Versions [GET]
+ Response 200 
    [Service Versions][]

### Create a new version of the service [POST]
+ Request (application/json)

        { "label" : "Obama (2nd term)" }

+ Response 201
    [Service Version][]

    + Header
    
            Location: $HOST/service/xyz/version/345

## Service Version [/services/{serviceId}/version/{versionId}]
+ Model (application/json)

            {
                "id" : "234",
                "label" : "Obama (1st term)",
                "configurationId" : "2"
            }

### Get a version Id [GET]
+ Response 200 

    [Service Version][]
        
## Service Config [/services/{serviceId}/version/{versionId}/config]
A single configuration object with all its details.

+ Model (application/json)

    + Body
    
            { 
                "properties": {
                    "poop" : {
                        "value" : "hehe",
                        "root" : "const"
                    },
                    "cookie" : {
                        "value" : "monster",
                        "root" : "const"
                    },
                    "coco" : {
                        "value" : "nut",
                        "root" : "var"
                    }
                }
            }

### Retrieve a Configuration [GET]

+ Response 200

    [Service Config][]

### Remove a Configuration [DELETE]

+ Response 204
